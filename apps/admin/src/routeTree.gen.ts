/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as ChatRouteImport } from './routes/chat'
import { Route as AuthenticatedRouteRouteImport } from './routes/_authenticated/route'
import { Route as AuthenticatedIndexRouteImport } from './routes/_authenticated/index'
import { Route as AuthCallbackRouteImport } from './routes/auth/callback'
import { Route as AuthenticatedReviewsRouteImport } from './routes/_authenticated/reviews'
import { Route as AuthenticatedChatManagementRouteImport } from './routes/_authenticated/chat-management'
import { Route as AuthenticatedProductsIndexRouteImport } from './routes/_authenticated/products/index'
import { Route as AuthenticatedOrdersIndexRouteImport } from './routes/_authenticated/orders/index'
import { Route as AuthenticatedProductsNewRouteImport } from './routes/_authenticated/products/new'
import { Route as AuthenticatedOrdersOrderIdRouteImport } from './routes/_authenticated/orders/$orderId'
import { Route as AuthenticatedProductsProductIdEditRouteImport } from './routes/_authenticated/products/$productId.edit'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const ChatRoute = ChatRouteImport.update({
  id: '/chat',
  path: '/chat',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRouteRoute = AuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedIndexRoute = AuthenticatedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthCallbackRoute = AuthCallbackRouteImport.update({
  id: '/auth/callback',
  path: '/auth/callback',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedReviewsRoute = AuthenticatedReviewsRouteImport.update({
  id: '/reviews',
  path: '/reviews',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedChatManagementRoute =
  AuthenticatedChatManagementRouteImport.update({
    id: '/chat-management',
    path: '/chat-management',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedProductsIndexRoute =
  AuthenticatedProductsIndexRouteImport.update({
    id: '/products/',
    path: '/products/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedOrdersIndexRoute =
  AuthenticatedOrdersIndexRouteImport.update({
    id: '/orders/',
    path: '/orders/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedProductsNewRoute =
  AuthenticatedProductsNewRouteImport.update({
    id: '/products/new',
    path: '/products/new',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedOrdersOrderIdRoute =
  AuthenticatedOrdersOrderIdRouteImport.update({
    id: '/orders/$orderId',
    path: '/orders/$orderId',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedProductsProductIdEditRoute =
  AuthenticatedProductsProductIdEditRouteImport.update({
    id: '/products/$productId/edit',
    path: '/products/$productId/edit',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/chat': typeof ChatRoute
  '/login': typeof LoginRoute
  '/chat-management': typeof AuthenticatedChatManagementRoute
  '/reviews': typeof AuthenticatedReviewsRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/': typeof AuthenticatedIndexRoute
  '/orders/$orderId': typeof AuthenticatedOrdersOrderIdRoute
  '/products/new': typeof AuthenticatedProductsNewRoute
  '/orders': typeof AuthenticatedOrdersIndexRoute
  '/products': typeof AuthenticatedProductsIndexRoute
  '/products/$productId/edit': typeof AuthenticatedProductsProductIdEditRoute
}
export interface FileRoutesByTo {
  '/chat': typeof ChatRoute
  '/login': typeof LoginRoute
  '/chat-management': typeof AuthenticatedChatManagementRoute
  '/reviews': typeof AuthenticatedReviewsRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/': typeof AuthenticatedIndexRoute
  '/orders/$orderId': typeof AuthenticatedOrdersOrderIdRoute
  '/products/new': typeof AuthenticatedProductsNewRoute
  '/orders': typeof AuthenticatedOrdersIndexRoute
  '/products': typeof AuthenticatedProductsIndexRoute
  '/products/$productId/edit': typeof AuthenticatedProductsProductIdEditRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/chat': typeof ChatRoute
  '/login': typeof LoginRoute
  '/_authenticated/chat-management': typeof AuthenticatedChatManagementRoute
  '/_authenticated/reviews': typeof AuthenticatedReviewsRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/orders/$orderId': typeof AuthenticatedOrdersOrderIdRoute
  '/_authenticated/products/new': typeof AuthenticatedProductsNewRoute
  '/_authenticated/orders/': typeof AuthenticatedOrdersIndexRoute
  '/_authenticated/products/': typeof AuthenticatedProductsIndexRoute
  '/_authenticated/products/$productId/edit': typeof AuthenticatedProductsProductIdEditRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/chat'
    | '/login'
    | '/chat-management'
    | '/reviews'
    | '/auth/callback'
    | '/'
    | '/orders/$orderId'
    | '/products/new'
    | '/orders'
    | '/products'
    | '/products/$productId/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/chat'
    | '/login'
    | '/chat-management'
    | '/reviews'
    | '/auth/callback'
    | '/'
    | '/orders/$orderId'
    | '/products/new'
    | '/orders'
    | '/products'
    | '/products/$productId/edit'
  id:
    | '__root__'
    | '/_authenticated'
    | '/chat'
    | '/login'
    | '/_authenticated/chat-management'
    | '/_authenticated/reviews'
    | '/auth/callback'
    | '/_authenticated/'
    | '/_authenticated/orders/$orderId'
    | '/_authenticated/products/new'
    | '/_authenticated/orders/'
    | '/_authenticated/products/'
    | '/_authenticated/products/$productId/edit'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  ChatRoute: typeof ChatRoute
  LoginRoute: typeof LoginRoute
  AuthCallbackRoute: typeof AuthCallbackRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/chat': {
      id: '/chat'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof ChatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/auth/callback': {
      id: '/auth/callback'
      path: '/auth/callback'
      fullPath: '/auth/callback'
      preLoaderRoute: typeof AuthCallbackRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/reviews': {
      id: '/_authenticated/reviews'
      path: '/reviews'
      fullPath: '/reviews'
      preLoaderRoute: typeof AuthenticatedReviewsRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/chat-management': {
      id: '/_authenticated/chat-management'
      path: '/chat-management'
      fullPath: '/chat-management'
      preLoaderRoute: typeof AuthenticatedChatManagementRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/products/': {
      id: '/_authenticated/products/'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof AuthenticatedProductsIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/orders/': {
      id: '/_authenticated/orders/'
      path: '/orders'
      fullPath: '/orders'
      preLoaderRoute: typeof AuthenticatedOrdersIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/products/new': {
      id: '/_authenticated/products/new'
      path: '/products/new'
      fullPath: '/products/new'
      preLoaderRoute: typeof AuthenticatedProductsNewRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/orders/$orderId': {
      id: '/_authenticated/orders/$orderId'
      path: '/orders/$orderId'
      fullPath: '/orders/$orderId'
      preLoaderRoute: typeof AuthenticatedOrdersOrderIdRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/products/$productId/edit': {
      id: '/_authenticated/products/$productId/edit'
      path: '/products/$productId/edit'
      fullPath: '/products/$productId/edit'
      preLoaderRoute: typeof AuthenticatedProductsProductIdEditRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
  }
}

interface AuthenticatedRouteRouteChildren {
  AuthenticatedChatManagementRoute: typeof AuthenticatedChatManagementRoute
  AuthenticatedReviewsRoute: typeof AuthenticatedReviewsRoute
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedOrdersOrderIdRoute: typeof AuthenticatedOrdersOrderIdRoute
  AuthenticatedProductsNewRoute: typeof AuthenticatedProductsNewRoute
  AuthenticatedOrdersIndexRoute: typeof AuthenticatedOrdersIndexRoute
  AuthenticatedProductsIndexRoute: typeof AuthenticatedProductsIndexRoute
  AuthenticatedProductsProductIdEditRoute: typeof AuthenticatedProductsProductIdEditRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedChatManagementRoute: AuthenticatedChatManagementRoute,
  AuthenticatedReviewsRoute: AuthenticatedReviewsRoute,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedOrdersOrderIdRoute: AuthenticatedOrdersOrderIdRoute,
  AuthenticatedProductsNewRoute: AuthenticatedProductsNewRoute,
  AuthenticatedOrdersIndexRoute: AuthenticatedOrdersIndexRoute,
  AuthenticatedProductsIndexRoute: AuthenticatedProductsIndexRoute,
  AuthenticatedProductsProductIdEditRoute:
    AuthenticatedProductsProductIdEditRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  ChatRoute: ChatRoute,
  LoginRoute: LoginRoute,
  AuthCallbackRoute: AuthCallbackRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
