/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as ChatImport } from './routes/chat'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated/route'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as AuthCallbackImport } from './routes/auth/callback'
import { Route as AuthenticatedReviewsImport } from './routes/_authenticated/reviews'
import { Route as AuthenticatedChatManagementImport } from './routes/_authenticated/chat-management'
import { Route as AuthenticatedProductsIndexImport } from './routes/_authenticated/products/index'
import { Route as AuthenticatedProductsNewImport } from './routes/_authenticated/products/new'
import { Route as AuthenticatedProductsProductIdEditImport } from './routes/_authenticated/products/$productId.edit'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const ChatRoute = ChatImport.update({
  id: '/chat',
  path: '/chat',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRouteRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthCallbackRoute = AuthCallbackImport.update({
  id: '/auth/callback',
  path: '/auth/callback',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedReviewsRoute = AuthenticatedReviewsImport.update({
  id: '/reviews',
  path: '/reviews',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedChatManagementRoute =
  AuthenticatedChatManagementImport.update({
    id: '/chat-management',
    path: '/chat-management',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedProductsIndexRoute = AuthenticatedProductsIndexImport.update(
  {
    id: '/products/',
    path: '/products/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any,
)

const AuthenticatedProductsNewRoute = AuthenticatedProductsNewImport.update({
  id: '/products/new',
  path: '/products/new',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedProductsProductIdEditRoute =
  AuthenticatedProductsProductIdEditImport.update({
    id: '/products/$productId/edit',
    path: '/products/$productId/edit',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRoute
    }
    '/chat': {
      id: '/chat'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof ChatImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/chat-management': {
      id: '/_authenticated/chat-management'
      path: '/chat-management'
      fullPath: '/chat-management'
      preLoaderRoute: typeof AuthenticatedChatManagementImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/reviews': {
      id: '/_authenticated/reviews'
      path: '/reviews'
      fullPath: '/reviews'
      preLoaderRoute: typeof AuthenticatedReviewsImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/auth/callback': {
      id: '/auth/callback'
      path: '/auth/callback'
      fullPath: '/auth/callback'
      preLoaderRoute: typeof AuthCallbackImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/products/new': {
      id: '/_authenticated/products/new'
      path: '/products/new'
      fullPath: '/products/new'
      preLoaderRoute: typeof AuthenticatedProductsNewImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/products/': {
      id: '/_authenticated/products/'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof AuthenticatedProductsIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/products/$productId/edit': {
      id: '/_authenticated/products/$productId/edit'
      path: '/products/$productId/edit'
      fullPath: '/products/$productId/edit'
      preLoaderRoute: typeof AuthenticatedProductsProductIdEditImport
      parentRoute: typeof AuthenticatedRouteImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedRouteRouteChildren {
  AuthenticatedChatManagementRoute: typeof AuthenticatedChatManagementRoute
  AuthenticatedReviewsRoute: typeof AuthenticatedReviewsRoute
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedProductsNewRoute: typeof AuthenticatedProductsNewRoute
  AuthenticatedProductsIndexRoute: typeof AuthenticatedProductsIndexRoute
  AuthenticatedProductsProductIdEditRoute: typeof AuthenticatedProductsProductIdEditRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedChatManagementRoute: AuthenticatedChatManagementRoute,
  AuthenticatedReviewsRoute: AuthenticatedReviewsRoute,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedProductsNewRoute: AuthenticatedProductsNewRoute,
  AuthenticatedProductsIndexRoute: AuthenticatedProductsIndexRoute,
  AuthenticatedProductsProductIdEditRoute:
    AuthenticatedProductsProductIdEditRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedRouteRouteWithChildren
  '/chat': typeof ChatRoute
  '/login': typeof LoginRoute
  '/chat-management': typeof AuthenticatedChatManagementRoute
  '/reviews': typeof AuthenticatedReviewsRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/': typeof AuthenticatedIndexRoute
  '/products/new': typeof AuthenticatedProductsNewRoute
  '/products': typeof AuthenticatedProductsIndexRoute
  '/products/$productId/edit': typeof AuthenticatedProductsProductIdEditRoute
}

export interface FileRoutesByTo {
  '/chat': typeof ChatRoute
  '/login': typeof LoginRoute
  '/chat-management': typeof AuthenticatedChatManagementRoute
  '/reviews': typeof AuthenticatedReviewsRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/': typeof AuthenticatedIndexRoute
  '/products/new': typeof AuthenticatedProductsNewRoute
  '/products': typeof AuthenticatedProductsIndexRoute
  '/products/$productId/edit': typeof AuthenticatedProductsProductIdEditRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/chat': typeof ChatRoute
  '/login': typeof LoginRoute
  '/_authenticated/chat-management': typeof AuthenticatedChatManagementRoute
  '/_authenticated/reviews': typeof AuthenticatedReviewsRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/products/new': typeof AuthenticatedProductsNewRoute
  '/_authenticated/products/': typeof AuthenticatedProductsIndexRoute
  '/_authenticated/products/$productId/edit': typeof AuthenticatedProductsProductIdEditRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/chat'
    | '/login'
    | '/chat-management'
    | '/reviews'
    | '/auth/callback'
    | '/'
    | '/products/new'
    | '/products'
    | '/products/$productId/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/chat'
    | '/login'
    | '/chat-management'
    | '/reviews'
    | '/auth/callback'
    | '/'
    | '/products/new'
    | '/products'
    | '/products/$productId/edit'
  id:
    | '__root__'
    | '/_authenticated'
    | '/chat'
    | '/login'
    | '/_authenticated/chat-management'
    | '/_authenticated/reviews'
    | '/auth/callback'
    | '/_authenticated/'
    | '/_authenticated/products/new'
    | '/_authenticated/products/'
    | '/_authenticated/products/$productId/edit'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  ChatRoute: typeof ChatRoute
  LoginRoute: typeof LoginRoute
  AuthCallbackRoute: typeof AuthCallbackRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  ChatRoute: ChatRoute,
  LoginRoute: LoginRoute,
  AuthCallbackRoute: AuthCallbackRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/chat",
        "/login",
        "/auth/callback"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated/route.tsx",
      "children": [
        "/_authenticated/chat-management",
        "/_authenticated/reviews",
        "/_authenticated/",
        "/_authenticated/products/new",
        "/_authenticated/products/",
        "/_authenticated/products/$productId/edit"
      ]
    },
    "/chat": {
      "filePath": "chat.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_authenticated/chat-management": {
      "filePath": "_authenticated/chat-management.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/reviews": {
      "filePath": "_authenticated/reviews.tsx",
      "parent": "/_authenticated"
    },
    "/auth/callback": {
      "filePath": "auth/callback.tsx"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/products/new": {
      "filePath": "_authenticated/products/new.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/products/": {
      "filePath": "_authenticated/products/index.ts",
      "parent": "/_authenticated"
    },
    "/_authenticated/products/$productId/edit": {
      "filePath": "_authenticated/products/$productId.edit.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
